[[plugins]]
repo = 'Shougo/dein.vim'

# Appearance

[[plugins]]
repo = 'tomasr/molokai'
hook_add = 'au cs_hook VimEnter * nested colorscheme molokai'

[[plugins]]
repo = 'itchyny/lightline.vim'

# Controll

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1
  nmap f <plug>(easymotion-overwin-f2)
'''

# Completion

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" : "\<tab>"
'''
on_i = 1
# Note: Execute the :UpdateRemotePlugins and restart Neovim.

# Lint

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
  autocmd! BufWritePost * Neomake
  let g:neomake_markdown_textlint_maker = {
  \     'exe': 'textlint',
  \     'args': ['--format', 'compact',
  \              '--rule', 'no-mix-dearu-desumasu',
  \              '--rule', 'max-ten',
  \              '--rule', 'spellcheck-tech-word',
  \             ],
  \     'errorformat': '%f: line %l\, col %c\, %m',
  \   }
  let g:neomake_markdown_enabled_makers = ['textlint']
'''

# Ctags

[[plugins]]
repo = 'soramugi/auto-ctags.vim'
hook_add = '''
  function! SetCtags()
    if &filetype != "" && system("git -C " . expand("%:h") . " rev-parse --is-inside-work-tree") == "true\n"
      let g:auto_ctags_filetype_mode = 1

      " 編集中のファイルの git ディレクトリを見つけ、ctags ディレクトリを作成する
      let s:git_dir = substitute(system('git -C ' . expand('%:h') . ' rev-parse --git-dir'), '\n\+$', '', '')
      let s:ctags_dir = s:git_dir . '/ctags'
      call system('mkdir -p ' . s:ctags_dir)

      " ctags ディレクトリに関する設定
      let g:auto_ctags_directory_list = [s:ctags_dir]
      let g:auto_ctags_tags_args = '--tag-relative --recurse --sort=yes ' . s:ctags_dir

      " ctags ディレクトリ中の lang.tags を tags ファイルにする
      exec 'set tags=' . s:ctags_dir . '/' . &filetype . '.tags'
    else
      set tags&
    endif
  endfunction

  au ctags_hook BufEnter * :call SetCtags()
'''

# Ref

[[plugins]]
repo = 'thinca/vim-ref'
