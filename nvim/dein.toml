[[plugins]]
repo = 'Shougo/dein.vim'

# Appearance

[[plugins]]
repo = 'tomasr/molokai'
hook_add = 'au AutoCmd VimEnter * nested colorscheme molokai'

[[plugins]]
repo = 'itchyny/lightline.vim'

# Controll

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1
  nmap f <plug>(easymotion-overwin-f2)
'''

# Ctags

[[plugins]]
repo = 'soramugi/auto-ctags.vim'
on_if = 'system("git -C " . expand("%:h") . " rev-parse --is-inside-work-tree") == "true\n"'
hook_add = '''
  let g:auto_ctags = 1
  let g:auto_ctags_filetype_mode = 1
  let g:auto_ctags_tags_args = '--tag-relative --recurse --sort=yes'

  let s:git_dir = substitute(system('git -C ' . expand('%:h') . ' rev-parse --git-dir'), '\n\+$', '', '')
  let s:ctags_dir = s:git_dir . '/ctags'
  call system('mkdir -p ' . s:ctags_dir)
  let g:auto_ctags_directory_list = [s:ctags_dir]
'''

# Lint

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
  autocmd! BufWritePost * Neomake
  let g:neomake_markdown_textlint_maker = {
  \     'exe': 'textlint',
  \     'args': ['--format', 'compact',
  \              '--rule', 'no-mix-dearu-desumasu',
  \              '--rule', 'max-ten',
  \              '--rule', 'spellcheck-tech-word',
  \             ],
  \     'errorformat': '%f: line %l\, col %c\, %m',
  \   }
  let g:neomake_markdown_enabled_makers = ['textlint']
'''

# Languages

## Binary
[[plugins]]
repo = 'Shougo/vinarise.vim'

## Ruby
[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = 'ruby'
hook_source = '''
  let g:neomake_ruby_enabled_makers = ['rubocop']
'''

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'

## HTML
[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'hokaccha/vim-html5validator'
on_ft = 'html'

## CSS
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

## JavaScript
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'
hook_source = '''
  let g:neomake_javascript_eslint_maker = {
  \     'exe': 'eslint',
  \     'args': ['-f', 'compact'],
  \     'errorformat': '%E%f: line %l\, col %c\, Error - %m,' .
  \                    '%W%f: line %l\, col %c\, Warning - %m'
  \     }
  let g:neomake_javascript_enabled_makers = ['eslint']
'''

## Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

## Haskell
[[plugins]]
repo = 'dag/vim2hs'
on_ft = 'haskell'

## TOML
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

## TeX
[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
